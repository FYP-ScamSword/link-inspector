name: CI

on: [push]

jobs:
  changes:
    name: Detect Changes in folder
    runs-on: ubuntu-latest
    outputs:
      names: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: actions/checkout@v3
    - name: Detect Changes
      uses: dorny/paths-filter@v2
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          url-inspection:
            - 'url-inspection/**'
          content-inspection:
            - 'content-inspection/**'
  unit-test-url-inspection:
    needs: changes
    if: ${{ needs.changes.outputs.names == '["url-inspection"]' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - name: Install dependencies
      working-directory: url-inspection
      run: npm install
    - name: Run test
      working-directory: url-inspection
      run: npm run test:unit
  integration-test-url-inspection:
    needs: unit-test-url-inspection
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run integration test
      working-directory: url-inspection
      run: docker-compose -f ci/docker-compose.test.yml up --exit-code-from link-inspection-url-inspection-jest
  deploy-url-inspection:
    needs: integration-test-url-inspection
    if: github.ref == 'refs/heads/main'
    name: Deploy app
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - uses: superfly/flyctl-actions/setup-flyctl@master
    - name: flyctl deploy
      working-directory: url-inspection
      run: flyctl deploy --remote-only
  unit-test-content-inspection:
    needs: changes
    if: ${{ needs.changes.outputs.names == '["content-inspection"]' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      working-directory: content-inspection
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run test
      working-directory: content-inspection
      run: pytest
