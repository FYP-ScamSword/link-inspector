name: CI

on: [push]

jobs:
  changes:
    name: Detect Changes in folder
    runs-on: ubuntu-latest
    outputs:
      names: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: actions/checkout@v3
    - name: Detect Changes
      uses: dorny/paths-filter@v2
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          url-inspection:
            - 'url-inspection/**'
          content-inspection:
            - 'content-inspection/**'
  unit-test-url-inspection:
    needs: changes
    if: ${{ needs.changes.outputs.names == '["url-inspection"]' || needs.changes.outputs.names == '["url-inspection","content-inspection"]' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - name: Install dependencies
      working-directory: url-inspection
      run: npm install
    - name: Run test
      working-directory: url-inspection
      run: npm run test:unit
  integration-test-url-inspection:
    needs: unit-test-url-inspection
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run integration test
      working-directory: url-inspection
      run: docker-compose -f ci/docker-compose.test.yml up --exit-code-from link-inspection-url-inspection-jest
  # deploy-url-inspection:
  #   needs: integration-test-url-inspection
  #   if: github.ref == 'refs/heads/main'
  #   name: Deploy app
  #   runs-on: ubuntu-latest
  #   env:
  #     FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: superfly/flyctl-actions/setup-flyctl@master
  #   - name: flyctl deploy
  #     working-directory: url-inspection
  #     run: flyctl deploy --remote-only
  deploy-url-inspection:
    needs: integration-test-url-inspection
    if: github.ref == 'refs/heads/main'
    name: Deploy app
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      working-directory: url-inspection
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: url-inspection
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    - name: Force new deployment
      run: |
        aws ecs update-service --cluster site-inspection-cluster --service url-inspection-service --region ap-southeast-1 --force-new-deployment
  unit-test-content-inspection:
    needs: changes
    if: ${{ needs.changes.outputs.names == '["content-inspection"]' || needs.changes.outputs.names == '["url-inspection","content-inspection"]' }}
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: /Users/claire/Documents/FYP/link-inspector/content-inspection/src
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install Dependencies
      working-directory: content-inspection
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run test
      run: |
        echo $PYTHONPATH
        echo $GITHUB_WORKSPACE
        cd $GITHUB_WORKSPACE/content-inspection
        python -m pytest
  # build-and-deploy-content-inspection:
  #   needs: unit-test-content-inspection
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: content-inspection
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3
  #   - name: Set up Node.js
  #     uses: actions/setup-node@v1
  #   - name: Build Docker image
  #     run: docker build -t content-inspection-image:${GITHUB_SHA} .

  #   - name: Configure AWS credentials
  #     uses: aws-actions/configure-aws-credentials@v1   # More information on this action can be found below in the 'AWS Credentials' section
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ap-southeast-1
  #   - name: Login to Amazon ECR
  #     run: aws-actions/amazon-ecr-login@v1


  #   - name: Tag Docker image
  #     run: docker tag content-inspection-image:${GITHUB_SHA} ${secrets.CONTENT_INSPECTION_ECR_REPOSITORY_URL}:latest

  #   - name: Push Docker image to Amazon ECR
  #     run: docker push ${env.CONTENT_INSPECTION_ECR_REPOSITORY_URL}:latest
